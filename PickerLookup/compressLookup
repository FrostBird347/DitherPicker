#!/usr/local/bin/node --max-old-space-size=16384
const fs = require('fs');

function LoopingDist(source, dest, max) {
	let posDist = max * 10;
	let negDist = max * 10;
	
	if (source < dest) {
		posDist = dest - source;
		negDist = (max - dest) + source;
	} else {
		posDist = (max - source) + dest;
		negDist = source - dest;
	}
	
	if (negDist < posDist) {
		return negDist * -1;
	}
	return posDist;
}

if (process.argv.length != 4) {
	console.error("Invalid arguments!");
	console.log("Usage:\n	compressLookup input_json output_json");
	process.exit(1);
}

//load data
console.log("Reading raw data...");
let rawData = JSON.parse(fs.readFileSync(process.argv[2]));

//process data
console.log("Processing raw data...");
let xDiff = [];
let yDiff = [];
let pointCount = rawData.length;
let xValue = 0;
let yValue = 0;
let lastProgressAmount = -1;
for (let i = 0; i < pointCount; i += 2) {
	let progressAmount = Math.floor((i / pointCount) * 100);
	if (progressAmount != lastProgressAmount) {
		process.stdout.write(progressAmount + "%                              \r");
		lastProgressAmount = progressAmount;
	}
	
	xDiff.push(LoopingDist(xValue, rawData[i], 12000));
	yDiff.push(LoopingDist(yValue, rawData[i+1], 12000));
	xValue = rawData[i];
	yValue = rawData[i+1];
	
}
process.stdout.write("100%                           \r");
let outputValues = xDiff.concat(yDiff);

console.log("Saving to " + process.argv[3] + "...                      ");
fs.writeFileSync(process.argv[3], JSON.stringify(outputValues));
console.log("Done!");
process.exit(0);